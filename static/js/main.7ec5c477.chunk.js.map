{"version":3,"sources":["getDataApi.js","User.js","TodoItem.js","TodoList.js","App.js","index.js"],"names":["getData","url","fetch","then","response","json","User","_ref","user","react_default","a","createElement","className","name","TodoItem","todo","id","title","src_User","completed","TodoList","fullTodos","_useState","useState","Object","toConsumableArray","_useState2","slicedToArray","todos","setTodos","_useState3","_useState4","sortingTitle","setSortingTitle","setSortBy","item","listOfTodos","reverse","sort","firstTodo","secondTodo","localeCompare","Number","map","heading","onClick","toUpperCase","src_TodoItem","key","getTodosWithUsers","todosList","usersList","objectSpread2","find","person","userId","App","isInitialized","setInitialized","isLoading","setLoading","type","regenerator_default","async","_context","prev","next","awrap","sent","stop","src_TodoList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7ec5c477.chunk.js","sourcesContent":["const getData = url => (\n  fetch(url).then(response => response.json())\n);\n\nexport default getData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User({ user }) {\n  return (\n    <td className=\"table__item\">{user.name}</td>\n  );\n}\n\nUser.propTypes = { user: PropTypes.oneOfType([PropTypes.object]).isRequired };\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nfunction TodoItem({ todo }) {\n  return (\n    <tr>\n      <td className=\"table__item\">{todo.id}</td>\n      <td className=\"table__item\">{todo.title}</td>\n      <User user={todo.user} />\n      <td className=\"table__item\">{todo.completed ? '+' : '-'}</td>\n    </tr>\n  );\n}\n\nTodoItem.propTypes\n  = { todo: PropTypes.oneOfType([PropTypes.object]).isRequired };\n\nexport default TodoItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ fullTodos }) => {\n  const [todos, setTodos] = useState([...fullTodos]);\n  const [sortingTitle, setSortingTitle] = useState('');\n\n  const getSortedTodos = (listOfTodos, title) => {\n    if (title === 'user') {\n      return [...listOfTodos]\n        .sort((firstTodo, secondTodo) => (\n          firstTodo.user.name.localeCompare(secondTodo.user.name)\n        ));\n    }\n\n    return [...listOfTodos].sort((firstTodo, secondTodo) => {\n      switch (typeof firstTodo[title]) {\n        case 'string':\n          return firstTodo[title].localeCompare(secondTodo[title]);\n        case 'boolean':\n          return Number(secondTodo[title]) - Number(firstTodo[title]);\n        default:\n          return firstTodo[title] - secondTodo[title];\n      }\n    });\n  };\n\n  const setSortBy = (item) => {\n    if (item === sortingTitle) {\n      setTodos([...todos.reverse()]);\n    } else {\n      setTodos([...getSortedTodos(todos, item)]);\n      setSortingTitle(item);\n    }\n  };\n\n  const headings = ['id', 'title', 'user', 'completed'];\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          {headings.map(heading => (\n            <th\n              className=\"table__heading\"\n              onClick={() => setSortBy(heading)}\n            >\n              {heading.toUpperCase()}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => <TodoItem todo={todo} key={todo.id} />)}\n      </tbody>\n    </table>\n  );\n};\n\nTodoList.propTypes\n  = { fullTodos: PropTypes.oneOfType([PropTypes.array]).isRequired };\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport './App.css';\nimport getData from './getDataApi';\nimport TodoList from './TodoList';\n\nconst todosURL = 'https://jsonplaceholder.typicode.com/todos';\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nconst getTodosWithUsers = (todosList, usersList) => (\n  todosList.map(todo => ({\n    ...todo,\n    user: usersList.find(person => person.id === todo.userId),\n  }))\n);\n\nlet todos = [];\n\nconst App = () => {\n  const [isInitialized, setInitialized] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const loadTodosWithUsers = async() => {\n    setLoading(true);\n\n    const todosList = await getData(todosURL);\n    const usersList = await getData(usersURL);\n\n    todos = [...getTodosWithUsers(todosList, usersList)];\n\n    setLoading(false);\n    setInitialized(true);\n  };\n\n  return (\n    <div className=\"App\">\n      {!isInitialized && !isLoading && (\n        <button\n          type=\"button\"\n          className=\"button--for-loading\"\n          onClick={loadTodosWithUsers}\n        >\n          Load\n        </button>\n      )}\n\n      {isLoading && (\n        <p className=\"loading-text\">Loading...</p>)}\n\n      {isInitialized && !isLoading && (\n        <TodoList\n          fullTodos={[...todos]}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}